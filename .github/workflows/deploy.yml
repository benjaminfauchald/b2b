name: Deploy to Production

on:
  push:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: b2b_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.3.0
        bundler-cache: true
    
    - name: Setup test credentials
      run: |
        mkdir -p config/credentials
        echo "2b6511362ac3e7195e7097e15c402eaa" > config/credentials/test.key
    
    - name: Install PostgreSQL client
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql-client
    
    - name: Wait for PostgreSQL
      run: |
        until pg_isready -h localhost -p 5432 -U postgres; do
          echo "Waiting for PostgreSQL..."
          sleep 2
        done
        echo "PostgreSQL is ready!"
    
    - name: Setup test database
      env:
        RAILS_ENV: test
        PGHOST: localhost
        PGPORT: 5432
        PGUSER: postgres
        PGPASSWORD: postgres
      run: |
        bin/rails db:create
        bin/rails db:migrate
    
    - name: Run tests
      env:
        RAILS_ENV: test
        PGHOST: localhost
        PGPORT: 5432
        PGUSER: postgres
        PGPASSWORD: postgres
      run: bundle exec rspec
    
    - name: Run linting
      run: bundle exec rubocop

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to production
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script: |
          cd /home/benjamin/b2b
          git fetch origin
          git reset --hard origin/master
          
          # Install/update gems
          bundle install --deployment --without development test
          
          # Precompile assets
          RAILS_ENV=production bundle exec rails assets:precompile
          
          # Run database migrations
          RAILS_ENV=production bundle exec rails db:migrate
          
          # Restart services
          sudo systemctl restart puma
          sudo systemctl restart sidekiq
          sudo systemctl reload nginx
          
          # Health check
          sleep 5
          if ! systemctl is-active --quiet puma; then
            echo "Puma failed to start!"
            exit 1
          fi
          
          if ! systemctl is-active --quiet sidekiq; then
            echo "Sidekiq failed to start!"
            exit 1
          fi
          
          echo "Deployment successful!"
