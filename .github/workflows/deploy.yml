name: Deploy to Production

on:
  push:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.3.0
        bundler-cache: true
    
    - name: Setup test credentials
      run: |
        mkdir -p config/credentials
        echo "2b6511362ac3e7195e7097e15c402eaa" > config/credentials/test.key
    
    - name: Setup test database
      env:
        RAILS_ENV: test
        DATABASE_URL: postgres://postgres:password@localhost:5432/b2b_test
      run: |
        bin/rails db:create
        bin/rails db:migrate
    
    - name: Run tests
      env:
        RAILS_ENV: test
        DATABASE_URL: postgres://postgres:password@localhost:5432/b2b_test
        REDIS_URL: redis://localhost:6379/0
      run: bundle exec rspec
    
    - name: Run linting
      run: bundle exec rubocop

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to production
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script: |
          cd /home/benjamin/b2b
          git fetch origin
          git reset --hard origin/master
          
          # Source rbenv environment
          export PATH="$HOME/.rbenv/bin:$PATH"
          eval "$(rbenv init -)"
          
          # Install/update gems
          bundle install --deployment --without development test
          
          # Precompile assets
          RAILS_ENV=production bundle exec rails assets:precompile
          
          # Run database migrations
          RAILS_ENV=production bundle exec rails db:migrate
          
          # Create restart file (used by Passenger/Puma)
          touch tmp/restart.txt
          
          # Restart services using service command (no sudo required)
          service puma restart || systemctl --user restart puma || echo "Puma restart attempted"
          service sidekiq restart || systemctl --user restart sidekiq || echo "Sidekiq restart attempted"
          
          # Diagnostic checks
          echo "🔍 Running diagnostic checks..."
          
          echo "📂 Application directory:"
          ls -la /home/benjamin/b2b/
          
          echo "🔧 Ruby environment:"
          which ruby && ruby -v
          which bundle && bundle -v
          
          echo "📦 Gem environment:"
          bundle check || echo "Gems not properly installed"
          
          echo "⚙️  Process status:"
          ps aux | grep -E "(puma|sidekiq)" | grep -v grep || echo "No puma/sidekiq processes found"
          
          echo "🌐 Port status:"
          netstat -tlnp | grep :3000 || echo "Port 3000 not listening"
          netstat -tlnp | grep :4000 || echo "Port 4000 not listening"
          
          echo "📋 Rails application check:"
          cd /home/benjamin/b2b
          if RAILS_ENV=production bundle exec rails runner "puts 'Rails loaded successfully'" 2>/dev/null; then
            echo "✅ Rails application loads correctly"
          else
            echo "❌ Rails application failed to load"
            echo "Error details:"
            RAILS_ENV=production bundle exec rails runner "puts 'Rails loaded successfully'" 2>&1 || true
          fi
          
          echo "🚀 Starting Rails server manually:"
          cd /home/benjamin/b2b
          # Kill any existing Rails processes
          pkill -f "rails server" || echo "No existing Rails processes"
          pkill -f "puma" || echo "No existing Puma processes"
          
          # Start Rails server bound to all interfaces on port 4000
          RAILS_ENV=production PORT=4000 nohup bundle exec rails server -b 0.0.0.0 -p 4000 > /tmp/rails.log 2>&1 &
          
          echo "⏳ Waiting for server to start..."
          sleep 10
          
          echo "📊 Server logs:"
          tail -20 /tmp/rails.log || echo "No log file found"
          
          echo "🔍 Health check:"
          # Test both ports
          echo "Testing port 3000:"
          curl -f -s http://localhost:3000/version && echo "✅ Port 3000 responding" || echo "❌ Port 3000 not responding"
          
          echo "Testing port 4000:"
          curl -f -s http://localhost:4000/version && echo "✅ Port 4000 responding" || echo "❌ Port 4000 not responding"
          
          echo "🔧 Port usage details:"
          lsof -i :3000 || echo "Nothing listening on port 3000"
          lsof -i :4000 || echo "Nothing listening on port 4000"
          
          echo "📋 Nginx configuration check:"
          grep -r "proxy_pass.*:" /etc/nginx/ || echo "Cannot read nginx config"
          
          echo "🎉 Deployment process completed!"
